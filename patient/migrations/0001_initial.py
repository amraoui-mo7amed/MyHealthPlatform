# Generated by Django 5.1.3 on 2025-03-16 14:13

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Illness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('DIABETES', 'Diabetes'), ('OBESITY', 'Obesity'), ('DIABETESANDOBESITY', 'Diabetes and Obesity')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BMI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField(validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(3.0)])),
                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(2.0), django.core.validators.MaxValueValidator(600.0)])),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('bmi_value', models.FloatField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bmi_records', to=settings.AUTH_USER_MODEL)),
                ('sickness', models.ManyToManyField(to='patient.illness')),
            ],
            options={
                'verbose_name': 'BMI Record',
                'verbose_name_plural': 'BMI Records',
                'ordering': ['-date_recorded'],
            },
        ),
        migrations.CreateModel(
            name='Diabetes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glucose_type', models.CharField(choices=[('mg/dl', 'mg/dl'), ('mmol/l', 'mmol/l')], max_length=10)),
                ('fasting_glucose', models.FloatField()),
                ('hba1c', models.FloatField()),
                ('cholesterol', models.IntegerField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diabetes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Diabetes Record',
                'verbose_name_plural': 'Diabetes Records',
            },
        ),
        migrations.CreateModel(
            name='DiabetesAndObesity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glucose', models.FloatField()),
                ('hb1ac', models.FloatField()),
                ('hdl', models.FloatField()),
                ('ldl', models.FloatField()),
                ('triglycerides', models.FloatField()),
                ('cholesterol', models.IntegerField()),
                ('ac_uric', models.IntegerField()),
                ('fns', models.FloatField()),
                ('crp', models.FloatField()),
                ('vitamin_d', models.FloatField()),
                ('b12', models.FloatField()),
                ('magnesium', models.FloatField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diabetes_and_obesity', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Diabetes and Obesity Record',
                'verbose_name_plural': 'Diabetes and Obesity Records',
            },
        ),
        migrations.CreateModel(
            name='Obesity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glucose', models.FloatField()),
                ('hdl', models.FloatField()),
                ('ldl', models.FloatField()),
                ('triglycerides', models.FloatField()),
                ('cholesterol', models.IntegerField()),
                ('ac_uric', models.IntegerField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='obesity', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Obesity Record',
                'verbose_name_plural': 'Obesity Records',
            },
        ),
        migrations.CreateModel(
            name='DietRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('request_verified', models.BooleanField(default=False)),
                ('meals_per_day', models.PositiveSmallIntegerField(choices=[(1, 'Once a day'), (2, 'Twice a day'), (3, 'Three times a day'), (4, 'Four times a day')], default=1)),
                ('between_meals', models.BooleanField(default=False)),
                ('sweets', models.BooleanField(default=False)),
                ('update_status', models.CharField(choices=[('PENDING', 'Pending Update'), ('UPDATED', 'Successfully Updated'), ('NONE', 'No Update Needed')], default='NONE', max_length=20)),
                ('fast_food', models.BooleanField(default=False)),
                ('enough_water', models.BooleanField(default=False)),
                ('food_allergy', models.BooleanField(default=False)),
                ('allergy_details', models.CharField(blank=True, max_length=255, null=True)),
                ('smoke', models.BooleanField(default=False)),
                ('alcohol', models.BooleanField(default=False)),
                ('depression_stress', models.BooleanField(default=False)),
                ('medication', models.BooleanField(default=False)),
                ('medication_details', models.CharField(blank=True, max_length=255, null=True)),
                ('last_meal_time', models.TimeField()),
                ('walking', models.BooleanField(default=False)),
                ('sleep', models.BooleanField(default=False)),
                ('bmi', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patient.bmi')),
                ('diabetes', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.diabetes')),
                ('diabetes_and_obesity', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.diabetesandobesity')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diet_request', to=settings.AUTH_USER_MODEL)),
                ('obesity', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.obesity')),
            ],
        ),
    ]
